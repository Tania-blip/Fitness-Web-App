@page "/users"

@using Microsoft.AspNetCore.Authorization
@* @attribute [Authorize] *@
@* @attribute [Authorize(Roles = "Administrator")] *@
@* @attribute [Authorize(Roles = "User")] *@
<h2>Clients</h2>

<AuthorizeView Roles="Administrator">
    <Authorized>
        <Button Color="Color.Dark" Size="Size.Medium">
            <NavLink class="buttonAddUser button-link" href="/user/add">Add User</NavLink>
        </Button>
    </Authorized>
</AuthorizeView>

<AuthorizeView>
    <Authorized Context="another_context">
        <div class="cards-container">
            @foreach (var user in Users)
            {
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@user.FirstName @user.LastName</h5>
                        <p class="card-text">Birthday: @user.Birthday.ToString("MM/dd/yyyy")</p>
                        <p class="card-text">Gender: @user.Gender</p>
                        <div class="card-buttons">
                            @* <Button Color="Color.Dark"> *@
                            @*     <NavLink class="butonEdit" href="@($"/user/edit/{user.Id}")">Edit</NavLink> *@
                            @* </Button> *@
                            <AuthorizeView Roles="Administrator">
                                <Authorized>
                                    <Button Color="Color.Secondary" Clicked="() => EditUser(user)">Edit</Button>
                                </Authorized>
                            </AuthorizeView>
                            <AuthorizeView Roles="Administrator">
                                <Authorized>
                                    <Button Color="Color.Dark" Clicked="() => AddWorkout(user)">Add Workout</Button>
                                </Authorized>
                            </AuthorizeView>
                            <Button Color="Color.Dark" Clicked="() => SeeWorkouts(user)">Show</Button>
                            <AuthorizeView Roles="Administrator">
                                <Authorized>
                                    <Button Color="Color.Danger" Clicked="() => OnDeleteButtonClicked(user)">Delete</Button>
                                </Authorized>
                            </AuthorizeView>
                        </div>
                    </div>
                </div>
            }
        </div>
        <DeleteConfirmationDialog @ref="DeleteConfirmation" OnConfirm="HandleDeleteConfirmed"/>

        <div class="pagination">
            <Button Color="Color.Dark" Clicked="() => ChangePage(currentPage - 1)" Disabled="@IsPreviousDisabled">Previous</Button>
            <span>Page @currentPage of @totalPages</span>
            <Button Color="Color.Dark" Clicked="() => ChangePage(currentPage + 1)" Disabled="@IsNextDisabled">Next</Button>
        </div>
    </Authorized>
</AuthorizeView>
<style>
    .button-link {
        color: white;
        text-decoration: none;
    }

    .button-link:hover {
        color: lightgray;
        text-decoration: none;
    }

    .cards-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin-top: 20px;
    }

    .card {
        border: 1px solid #ccc;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin: 10px;
        width: 300px;
    }

    .card-body {
        padding: 15px;
    }

    .card-title {
        font-size: 1.2em;
        margin-bottom: 10px;
    }

    .card-text {
        margin-bottom: 10px;
    }

    .card-buttons {
        display: flex;
        justify-content: space-between;
    }

    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
    }

    .page-info {
        margin: 0 10px;
        font-weight: bold;
        font-size: 1.2em;
        color: #333;
    }

    .pagination button {
        padding: 5px 10px;
        margin: 0 5px;
    }
</style>




    