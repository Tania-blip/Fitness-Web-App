<div class="modal" style="display:@(IsVisible ? "block" : "none")">
    <div class="modal-content">
        <span class="close" @onclick="CloseModal">&times;</span>
        <h2>Confirm Delete</h2>
        <p>Are you sure you want to delete this item?</p>
        <button class = "buton" @onclick="ConfirmDelete">Yes</button>
        <button class = "buton" @onclick="CloseModal">No</button>
    </div>
</div>

<style>
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
        justify-content: center;
        align-items: center;
        animation: fadeIn 0.3s ease-in-out;
    }

    .modal.show {
        display: flex;
    }

    .modal-content {
        background-color: #fff;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 500px;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        animation: slideIn 0.3s ease-in-out;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

    .close:hover,
    .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }

    .modal-buttons {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
    }
    

    .btn-primary {
        background-color: #007bff;
        color: white;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
    }
   

   

</style>
@code{
    
    //private Modal modal = default!;
    [Parameter]
    public EventCallback<bool> OnConfirm { get; set; }
    
    private bool IsVisible { get; set; } = false;
    
    public void Show()
    {
        IsVisible = true;
        StateHasChanged();
    }
    
    private void CloseModal()
    {
        IsVisible = false;
        StateHasChanged();
    }
    
    private async Task ConfirmDelete()
    {
        await OnConfirm.InvokeAsync(true);
        CloseModal();
    }
    

}